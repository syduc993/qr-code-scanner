import streamlit as st
import cv2
from qreader import QReader
import numpy as np
from PIL import Image
import requests

def main():
    st.title("üì∑ Qu√©t QR Code ƒë·ªÉ tra c·ª©u th√¥ng tin")
    
    # Kh·ªüi t·∫°o QReader
    qreader = QReader()

    # T·∫°o file uploader ƒë·ªÉ ng∆∞·ªùi d√πng c√≥ th·ªÉ t·∫£i l√™n ·∫£nh
    uploaded_file = st.file_uploader("T·∫£i l√™n ·∫£nh ch·ª©a m√£ QR", type=['jpg', 'jpeg', 'png'])
    
    # T·∫°o camera capture
    if st.button("S·ª≠ d·ª•ng Camera"):
        cap = cv2.VideoCapture(0)
        frame_placeholder = st.empty()
        stop_button_pressed = st.button("D·ª´ng Camera")
        
        while cap.isOpened() and not stop_button_pressed:
            ret, frame = cap.read()
            if ret:
                # Qu√©t QR code
                decoded_text = qreader.detect_and_decode(image=frame)
                
                if decoded_text:
                    # V·∫Ω khung xung quanh QR code
                    bboxes = qreader.detect(frame)
                    if bboxes is not None:
                        for bbox in bboxes:
                            points = bbox.astype(np.int32)
                            cv2.polylines(frame, [points], True, (0, 255, 0), 3)
                            
                            # Hi·ªÉn th·ªã d·ªØ li·ªáu
                            cv2.putText(frame, decoded_text[0], (points[0][0], points[0][1] - 10),
                                      cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
                    
                    # L∆∞u k·∫øt qu·∫£ v√† d·ª´ng camera
                    st.session_state['qr_result'] = decoded_text[0]
                    cap.release()
                    return
                
                # Hi·ªÉn th·ªã frame
                frame_placeholder.image(frame, channels="BGR")
        
        cap.release()

    # X·ª≠ l√Ω ·∫£nh ƒë∆∞·ª£c t·∫£i l√™n
    if uploaded_file is not None:
        image = Image.open(uploaded_file)
        image_np = np.array(image)
        
        # Qu√©t QR code t·ª´ ·∫£nh
        decoded_text = qreader.detect_and_decode(image=image_np)
        
        if decoded_text:
            st.session_state['qr_result'] = decoded_text[0]
        
        # Hi·ªÉn th·ªã ·∫£nh
        st.image(image, caption='·∫¢nh ƒë√£ t·∫£i l√™n')

    # Hi·ªÉn th·ªã k·∫øt qu·∫£ qu√©t
    if 'qr_result' in st.session_state:
        qr_text = st.session_state['qr_result']
        st.success(f"‚úÖ ƒê√£ qu√©t m√£ QR: {qr_text}")
        
        # G·ªçi API v·ªõi m√£ QR (thay th·∫ø URL API th·∫≠t c·ªßa b·∫°n)
        try:
            API_URL = f"https://your-api.com/search/?qr_code={qr_text}"
            response = requests.get(API_URL)
            
            if response.status_code == 200:
                result = response.json()
                st.write("üîπ K·∫øt qu·∫£ tra c·ª©u:")
                st.json(result)
            else:
                st.error("‚ùå Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu!")
        except requests.RequestException:
            st.error("‚ùå L·ªói k·∫øt n·ªëi API!")

if __name__ == "__main__":
    main()