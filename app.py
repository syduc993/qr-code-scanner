import streamlit as st
import av
import requests
import cv2
from streamlit_webrtc import webrtc_streamer, VideoProcessorBase

st.title("üì∑ Qu√©t QR Code ƒë·ªÉ tra c·ª©u th√¥ng tin")

# B·ªô x·ª≠ l√Ω video ƒë·ªÉ qu√©t m√£ QR t·ª´ camera
class QRCodeScanner(VideoProcessorBase):
    def recv(self, frame):
        img = frame.to_ndarray(format="bgr24")  # Chuy·ªÉn ƒë·ªïi frame th√†nh ·∫£nh
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)  # Chuy·ªÉn sang ·∫£nh x√°m
        
        # Qu√©t m√£ QR s·ª≠ d·ª•ng OpenCV
        detector = cv2.QRCodeDetector()
        retval, decoded_info, points, straight_qrcode = detector(img)

        if retval:
            for i in range(len(decoded_info)):
                qr_text = decoded_info[i]
                pts = points[i]
                pts = pts.astype(int)
                cv2.polylines(img, [pts], True, (0, 255, 0), 3)  # V·∫Ω ƒë∆∞·ªùng bao quanh m√£ QR
                cv2.putText(img, qr_text, tuple(pts[0]), cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 255, 0), 2)

                # L∆∞u gi√° tr·ªã QR code v√†o session state
                st.session_state["qr_result"] = qr_text

        return av.VideoFrame.from_ndarray(img, format="bgr24")

# Hi·ªÉn th·ªã camera v√† qu√©t QR
webrtc_streamer(key="qr_scan", video_processor_factory=QRCodeScanner)

# Hi·ªÉn th·ªã m√£ QR ƒë√£ qu√©t
if "qr_result" in st.session_state:
    qr_text = st.session_state["qr_result"]
    st.success(f"‚úÖ ƒê√£ qu√©t m√£ QR: `{qr_text}`")

    # G·ª≠i API ƒë·ªÉ l·∫•y d·ªØ li·ªáu t·ª´ server
    API_URL = f"https://your-api.com/search/?qr_code={qr_text}"
    response = requests.get(API_URL)
    
    if response.status_code == 200:
        result = response.json()
        st.write("üîπ **K·∫øt qu·∫£ tra c·ª©u:**")
        st.json(result)
    else:
        st.error("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu!")
